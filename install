#!/usr/bin/env zsh

set -e

HOMEMAKER=/usr/local/bin/homemaker
DEST=$HOME
export GEM_HOME="$HOME/.gem"

if [ ! -f $HOMEMAKER ]; then
  echo "Installing homemaker..."
  ARCH=`uname -m | tr '[:upper:]' '[:lower:]'`
  PLATFORM=`uname | tr '[:upper:]' '[:lower:]'`
  if [[ "$ARCH" =~ "64" ]]; then
    ARCH="amd64"
  else
    ARCH="386"
  fi
  DOWNLOAD_FILE="https://foosoft.net/projects/homemaker/dl/homemaker_${PLATFORM}_${ARCH}.tar.gz"
  curl $DOWNLOAD_FILE -o /tmp/homemaker.tar.gz

  tar -xvzf /tmp/homemaker.tar.gz -C /tmp/

  sudo mkdir -p /usr/local/bin &> /dev/null
  sudo mv /tmp/homemaker_${PLATFORM}_${ARCH}/homemaker $HOMEMAKER
fi

INPUT_CLONE_PATH="$1"
CLONE_PATH=$DEST/.dotfiles
CLONE_REPO=1
if [ "$INPUT_CLONE_PATH" != "" ]; then
  CLONE_PATH=$INPUT_CLONE_PATH
  shift
fi

OS_INSTALLER=$((type brew &> /dev/null && echo "brew") || (type dnf &> /dev/null && echo "sudo dnf -y install") || echo "sudo apt-get install -y")

type git &> /dev/null || $OS_INSTALLER git > /dev/null
echo "Will install files into $CLONE_PATH"

if [[ ! -d $CLONE_PATH ]]; then
  git clone https://github.com/mtxr/dotfiles.git $CLONE_PATH
  git -C $CLONE_PATH submodule update --init --recursive --remote --merge
fi

mkdir -p $DEST &> /dev/null || sudo mkdir -p $DEST

if [[ "$OSTYPE" == "darwin"* ]]; then
  VARIANT=osx
else 
  VARIANT=$((type dnf &> /dev/null && echo "fedora") || echo "debian")
fi

if [[ ! -f /home/linuxbrew/.linuxbrew/bin/brew ]] && (! type brew &> /dev/null); then
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
fi

export PATH="/home/linuxbrew/.linuxbrew/bin:$PATH"

$HOMEMAKER -variant=$VARIANT -force -dest "$DEST" $CLONE_PATH/config.toml $CLONE_PATH


# exec $ZSH_BIN
